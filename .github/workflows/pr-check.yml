name: PR Checks ✅

on:
  pull_request:

env:
  NODE_VERSION: 22.x

jobs:
  build:
    name: Build 🏗️
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code 📚
        uses: actions/checkout@v4
      - name: Set up Node 🟢
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"
      - name: Install dependencies ⚙️
        run: npm ci
      - name: Build Check 🏗️
        run: npm run build
  #        env:
  #          SOME_SECRET: ${{ secret.SOME_SECRET }}

  build-storybook:
    name: Build Storybook 📖🏗️
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code 📚
        uses: actions/checkout@v4
      - name: Set up Node 🟢
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"
      - name: Install packages ⚙️
        run: npm ci
      - name: Build Check 🏗️
        run: npm run storybook:build

  prettier:
    name: Prettier 🧹
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code 📚
        uses: actions/checkout@v4
      - name: Set up Node 🟢
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"
      - name: Install dependencies ⚙️
        run: npm ci
      - name: Prettier Check 🧹
        run: npm run prettier:check

  lint:
    name: ESlint ⬣
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code 📚
        uses: actions/checkout@v4
      - name: Set up Node 🟢
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"
      - name: Install dependencies ⚙️
        run: npm ci
      - name: Install utils ⚙️
        run: npm install @microsoft/eslint-formatter-sarif
      - name: ESlint Check ⬣
        run: npm run lint:ci
        continue-on-error: true
      - name: Upload ESlint results to GitHub
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: eslint-results.sarif
          wait-for-processing: true

  type-check:
    name: TypeScript 🛠️
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code 📚
        uses: actions/checkout@v4
      - name: Set up Node 🟢
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"
      - name: Install dependencies ⚙️
        run: npm ci
      - name: TypeScript Check 🛠️
        run: npm run type-check

  test:
    name: Test 🧪
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code 📚
        uses: actions/checkout@v4
      - name: Set up Node 🟢
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"
      - name: Install dependencies ⚙️
        run: npm ci
      - name: Install Playwright Browsers ⚙️
        run: npx playwright install --with-deps
      - name: Test Check 🧪
        run: npm run test:ci

  e2e-test:
    name: Playwright 🎭
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - name: Checkout code 📚
        uses: actions/checkout@v4
      - name: Set up Node 🟢
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"
      - name: Install dependencies ⚙️
        run: npm ci
      - name: Build app 🏗️
        run: npm run build
      - name: Install Playwright Browsers ⚙️
        run: npx playwright install --with-deps
      - name: Playwright tests check 🎭
        run: npm run test:e2e:ci
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

  dependency-review:
    name: Dependency Review
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Checkout code 📚
        uses: actions/checkout@v4
      - name: Dependency Review
        uses: actions/dependency-review-action@v4
        with:
          comment-summary-in-pr: on-failure
